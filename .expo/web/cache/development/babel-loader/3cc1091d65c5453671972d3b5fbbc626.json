{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var singUp = function singUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email);\n    }).catch(function (error) {\n      return Alert.alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.inputs\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.inputs,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log('Login');\n        },\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: singUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: [styles.buttonText, styles.buttonOutlineText],\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  inputs: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782f9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    color: '#0782f9',\n    fontSize: 16,\n    fontWeight: '700'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["C:/MAD2/loginsysteem/Screens/LoginScreen.js"],"names":["React","auth","useState","LoginScreen","email","setEmail","password","setPassword","singUp","createUserWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","Alert","alert","message","styles","container","inputContainer","text","inputs","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { StyleSheet, KeyboardAvoidingView, TouchableOpacity, TextInput, Text, View ,Alert } from 'react-native'\r\nimport React from 'react'\r\nimport { auth } from '../firebase';\r\nimport { useState } from 'react';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\nconst singUp = () => {\r\n    auth.createUserWithEmailAndPassword(email,password).then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user.email);\r\n    })\r\n    .catch(error => Alert.alert(error.message))\r\n};\r\n    return (\r\n        <KeyboardAvoidingView\r\n            style={styles.container}\r\n            behavior=\"padding\"\r\n        >\r\n            <View style={styles.inputContainer}>\r\n                <TextInput\r\n                    placeholder='Email'\r\n                     value={email} onChangeText={text =>setEmail(text)}\r\n                    style={styles.inputs}\r\n                ></TextInput>\r\n                <TextInput\r\n                    placeholder='Password'\r\n                      value={password} onChangeText={text =>setPassword(text)}\r\n                    style={styles.inputs}\r\n                    secureTextEntry\r\n                ></TextInput>\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity\r\n                    onPress={() => console.log('Login')}\r\n                    style={styles.button}\r\n                >\r\n                    <Text style={styles.buttonText} >Login</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    onPress={singUp}\r\n                    style={[styles.button, styles.buttonOutline]}\r\n                >\r\n                    <Text style={[styles.buttonText, styles.buttonOutlineText]} >Register</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    inputContainer: {\r\n        width: '80%',\r\n    },\r\n    inputs: {\r\n        backgroundColor: '#fff',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40,\r\n    },\r\n    button: {\r\n        backgroundColor: '#0782f9',\r\n        width: '100%',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center'\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonOutlineText: {\r\n        color: '#0782f9',\r\n        fontSize: 16,\r\n        fontWeight: '700',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: '700',\r\n    },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}